{"version":3,"sources":["images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/prize01.png","components/Page/index.js","pages/main/index.js","pages/detail/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Page","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","children","Component","Main","fullpage","navigation","scrollHorizontally","css3","scrollingSpeed","scrollBar","easing","slidesNavigation","easingcss3","Page_Page","Link","to","id","src","pic1","pic2","pic3","pic4","Detail","prize01","App","BrowserRouter","Switch","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sSCGnBC,qBACnB,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAIP,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVP,KAAKH,MAAMW,iBARYC,2GCObC,cACnB,SAAAA,EAAYb,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,GAAAZ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,KACVH,qFAIgB,IAAIc,IAAS,YAAa,CAC/CC,YAAY,EACZC,oBAAoB,EACpBC,MAAM,EACNC,eAAgB,IAChBC,WAAW,EACXC,OAAQ,iBACRC,kBAAkB,EAClBC,WAAY,0CAKd,OACEf,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,UAAT,gBACAlB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,UAAT,iBAEJlB,EAAAC,EAAAC,cAAA,OAAKiB,GAAG,YACNnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKkB,IAAKC,OAEZrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKkB,IAAKE,OAEZtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKkB,IAAKG,OAEZvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKkB,IAAKI,iBArCYnB,8BCJboB,qBACnB,SAAAA,EAAYhC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,GAAA/B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KACVH,0EAIP,OACEO,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,KAAT,WACAlB,EAAAC,EAAAC,cAAA,OAAKkB,IAAKM,eAXcrB,cCgBrBsB,0LAbX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACM5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACI7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3B,IACjCN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,UAAWR,cAPtCpB,cCKE6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.db074eb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.436caf36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.bb414b20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.1042f738.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.787c5b2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prize01.88ab8df7.png\";","import React,{ Component } from 'react';\nimport './style.scss';\n\nexport default class Page extends Component{\n  constructor(props){\n     super(props)\n  }\n\n  render(){\n    return (\n      <div className='Page_container'>\n          {this.props.children}\n      </div>\n    )\n  }\n}\n","import React,{ Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport fullpage from 'fullpage.js';\nimport './style.scss';\nimport pic1  from '../../images/1.jpg';\nimport pic2  from '../../images/2.jpg';\nimport pic3  from '../../images/3.jpg';\nimport pic4  from '../../images/4.jpg';\n\nexport default class Main extends Component{\n  constructor(props){\n     super(props)\n  }\n\n  componentDidMount(){\n    var fullPageInstance = new fullpage('#fullpage', {\n      navigation: true,\n      scrollHorizontally: true,\n      css3: true,\n      scrollingSpeed: 700,\n      scrollBar: false,\n      easing: 'easeInOutCubic',\n      slidesNavigation: true,\n      easingcss3: 'ease',\n  });\n  }\n\n  render(){\n    return (\n      <Page>\n        <div className='container'>\n          <header>\n            <Link to='/login'>登录</Link>\n            <Link to='/login'>注册</Link>\n          </header>\n        <div id=\"fullpage\">\n          <div className=\"section\">\n            <img src={pic1}/>\n          </div>\n          <div className=\"section\">\n            <img src={pic2}/>\n          </div>\n          <div className=\"section\">\n            <img src={pic3}/>\n          </div>\n          <div className=\"section\">\n            <img src={pic4}/>\n          </div>\n        </div>\n\n\n        </div>\n        \n      </Page>\n    )\n  }\n}\n","import React,{ Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Page from '../../components/Page'\nimport prize01 from '../../images/prize01.png'\nimport './style.scss';\n\nexport default class Detail extends Component{\n  constructor(props){\n     super(props)\n  }\n\n  render(){\n    return (\n      <Page>\n        <div className='detail_container'>\n            <header>this is detail</header>\n            <Link to='/'>go home</Link>\n            <img src={prize01}/>\n        </div>\n      </Page>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom'\n\nimport Main from './pages/main'\nimport Detail from './pages/detail'\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n              <Switch>\n                  <Route path=\"/\" exact component={Main}/>\n                  <Route path=\"/login\" exact component={Detail}/>\n              </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}