{"version":3,"sources":["images/1.jpg","api/index.js","models/login.js","models/register.js","pages/main/index.js","components/Page/index.js","components/Page/ErrorBoundary.js","pages/login/index.js","pages/register/index.js","components/Frame/index.js","router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API","REQUEST","url","type","params","arguments","length","undefined","this","then","res","data","GET","axios","get","POST","post","DELETE","_ref","delete","PUT","put","models_login","namespace","state","name","password","isLogin","reducers","handleInput","value","Object","objectSpread","refresh","_ref2","payload","effects","handleSubmit","regenerator_default","a","mark","action","_ref3","select","wrap","_context","prev","next","login","sent","md5","ret","stop","models_register","confirm_password","isRegister","subscriptions","register","Main","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","className","Link","to","src","pic1","Component","Page","_Component","_React$Component","ErrorBoundaryHoc","_this","componentName","componentKind","_component_kind_","hasError","error","info","inherits","createClass","key","setState","console","log","handleError","React","ErrorBoundary","FormItem","es_form","Item","LoginForm","_this$props","dispatch","notification","message","description","e","target","_this2","_this$props2","loading","divider","rc_queue_anim_es","delay","input","onChange","handleChange","prefix","icon","style","color","placeholder","es_checkbox","checked","href","es_button","htmlType","onClick","connect","RegisterForm","_this$props$register","register_FormItem","FrameContainer","handleProgress","nextProps","location","pathname","nprogress","start","app","_store","getState","global","done","children","RouterConfig","router","Frame_FrameContainer","path","exact","component","Login","Register","Boolean","window","hostname","match","dva","history","createHistory","use","createLoading","model","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mUCwBzBC,EAtBH,CACRC,QAAS,SAASC,EAAKC,GAAgB,IAAVC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,GAEhC,OAAOG,KAAKL,GAAMD,EAAKE,GAAQK,KAAK,SAACC,GACjC,OAAOA,EAAIC,QAInBC,IAAK,SAASV,EAAKE,GACf,OAAOS,IAAMC,IAAIZ,EAAK,CAACE,YAE3BW,KAAM,SAASb,EAAKE,GAChB,OAAOS,IAAMG,KAAKd,EAAKE,IAE3Ba,OAAQ,SAASf,EAATgB,GAAuB,IAARd,EAAQc,EAARd,OACnB,OAAOS,IAAMM,OAAOjB,EAAKE,IAE7BgB,IAAK,SAASlB,EAAKE,GACf,OAAOS,IAAMQ,IAAInB,EAAKE,KCjBfkB,EAAA,CACXC,UAAW,QACXC,MAAO,CACHC,KAAM,GACNC,SAAU,GACVC,SAAS,GAEbC,SAAU,CACNC,YADM,SACML,EADNN,GAC4B,IAAdY,EAAcZ,EAAdY,MAGhB,OAFAN,EAD8BN,EAAPO,MACTK,EAEPC,OAAAC,EAAA,EAAAD,CAAA,GACAP,IAGXS,QARM,SAQET,EARFU,GAQoB,IAAVC,EAAUD,EAAVC,QACZ,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAP,EACAW,KAIfC,QAAS,CACJC,aADIC,EAAAC,EAAAC,KAAA,SAAAH,EACSI,EADTC,GAAA,IAAArB,EAAAsB,EAAAnB,EAAAC,EAAAC,EAAAf,EAAAD,EAAAiB,EAAA,OAAAW,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEa,OADM1B,EADnBqB,EACmBrB,IAAKsB,EADxBD,EACwBC,OADxBE,EAAAE,KAAA,EAEmBJ,EAAO,SAAAnB,GAAK,OAAIA,EAAMwB,QAFzC,OAQW,OANNxB,EAFLqB,EAAAI,KAGMxB,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,SACPf,EAAO,CACTc,OACAC,SAAUwB,IAAIxB,IANjBmB,EAAAE,KAAA,EAQiB/C,EAAIC,QAAQ,YAAa,MAAOU,GARjD,OAUD,OAFMD,EARLmC,EAAAI,KASKtB,EAAsB,IAAZjB,EAAIyC,IATnBN,EAAAE,KAAA,GAUK1B,EAAI,CAAElB,KAAM,UAAWgC,QAAQ,CAACR,aAVrC,yBAAAkB,EAAAO,SAAAf,EAAA7B,UCtBE6C,EAAA,CACX9B,UAAW,WACXC,MAAO,CACHC,KAAM,GACNC,SAAU,GACV4B,iBAAkB,GAClBC,YAAY,GAGhBC,cAAe,GAEfpB,QAAS,CACJC,aADIC,EAAAC,EAAAC,KAAA,SAAAH,EACSI,EADTvB,GAAA,IAAAG,EAAAsB,EAAAnB,EAAAC,EAAAC,EAAA4B,EAAA3C,EAAAD,EAAA6C,EAAA,OAAAjB,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEa,OADM1B,EADnBH,EACmBG,IAAKsB,EADxBzB,EACwByB,OADxBE,EAAAE,KAAA,EAEmBJ,EAAO,SAAAnB,GAAK,OAAIA,EAAMiC,WAFzC,OASW,OAPNjC,EAFLqB,EAAAI,KAGMxB,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAU4B,EAAoB9B,EAApB8B,iBACjB3C,EAAO,CACTc,OACAC,SAAUwB,IAAIxB,GACd4B,iBAAkBJ,IAAII,IAPzBT,EAAAE,KAAA,EASiB/C,EAAIC,QAAQ,YAAa,OAAQU,GATlD,OAWD,OAFMD,EATLmC,EAAAI,KAUKM,EAAyB,IAAZ7C,EAAIyC,IAVtBN,EAAAE,KAAA,GAWK1B,EAAI,CAAElB,KAAM,UAAWgC,QAAQ,CAACoB,gBAXrC,yBAAAV,EAAAO,SAAAf,EAAA7B,SAeToB,SAAU,CACNC,YADM,SACML,EADNU,GAC4B,IAAdJ,EAAcI,EAAdJ,MAGhB,OAFAN,EAD8BU,EAAPT,MACTK,EAEPC,OAAAC,EAAA,EAAAD,CAAA,GACAP,IAGXS,QARM,SAQET,EARFkB,GAQoB,IAAVP,EAAUO,EAAVP,QACZ,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAP,EACAW,yGCnCEuB,cACjB,SAAAA,EAAYC,GAAO,OAAA5B,OAAA6B,EAAA,EAAA7B,CAAAvB,KAAAkD,GAAA3B,OAAA8B,EAAA,EAAA9B,CAAAvB,KAAAuB,OAAA+B,EAAA,EAAA/B,CAAA2B,GAAAK,KAAAvD,KACTmD,0EAIN,OACIK,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,aACXF,EAAAzB,EAAA0B,cAAA,cACID,EAAAzB,EAAA0B,cAACE,EAAA,EAAD,CAAMC,GAAG,eAAT,gBACAJ,EAAAzB,EAAA0B,cAACE,EAAA,EAAD,CAAMC,GAAG,kBAAT,iBAGJJ,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,WACXF,EAAAzB,EAAA0B,cAAA,OAAKI,IAAKC,eAdIC,4ICHnB,SAASC,EAAKC,GAGzB,OCDW,SAAuBF,GAmClC,OAnC6C,SAAAG,GAEzC,SAAAC,EAAYhB,GAAO,IAAAiB,EAAA,OAAA7C,OAAA6B,EAAA,EAAA7B,CAAAvB,KAAAmE,IACfC,EAAA7C,OAAA8B,EAAA,EAAA9B,CAAAvB,KAAAuB,OAAA+B,EAAA,EAAA/B,CAAA4C,GAAAZ,KAAAvD,KAAMmD,KACDkB,cAAgBN,EAAU9C,KAC/BmD,EAAKE,cAAgBP,EAAUQ,iBAC/BH,EAAKpD,MAAQ,CAACwD,UAAU,EAAOC,MAAO,KAAMC,KAAM,MAJnCN,EAFsB,OAAA7C,OAAAoD,EAAA,EAAApD,CAAA4C,EAAAD,GAAA3C,OAAAqD,EAAA,EAAArD,CAAA4C,EAAA,EAAAU,IAAA,cAAAvD,MAAA,SAS7BmD,EAAOC,GAAM,IACdL,EAAgCrE,KAAhCqE,cAAeC,EAAiBtE,KAAjBsE,cACtBtE,KAAK8E,SAAS,CAACN,UAAU,EAAMC,QAAOC,SACtCK,QAAQC,IAAI,gCACZD,QAAQC,IAAI,wBAAyBV,GACrCS,QAAQC,IAAI,wBAAyBX,GACrCU,QAAQC,IAAI,kBAAmBP,GAC/BM,QAAQC,IAAI,eAAgBN,GAC5BK,QAAQC,IAAI,kCAjByB,CAAAH,IAAA,oBAAAvD,MAAA,SAqBvBmD,EAAOC,GACrB1E,KAAKiF,YAAYR,EAAOC,KAtBa,CAAAG,IAAA,SAAAvD,MAAA,WA2BrC,OADmBtB,KAAKgB,MAAjBwD,SAEI,KAGJhB,EAAAzB,EAAA0B,cAACM,EAAc/D,KAAKmD,WA/BUgB,EAAA,CACde,IAAMnB,WDFnBoB,CAAclB,kBEK9BmB,EAAWC,EAAA,EAAKC,KAGhBC,EADLvB,gBAEG,SAAAuB,EAAYpC,GAAM,IAAAiB,EAAA,OAAA7C,OAAA6B,EAAA,EAAA7B,CAAAvB,KAAAuF,IACdnB,EAAA7C,OAAA8B,EAAA,EAAA9B,CAAAvB,KAAAuB,OAAA+B,EAAA,EAAA/B,CAAAgE,GAAAhC,KAAAvD,KAAMmD,KAGVtB,aAAe,WAAM,IAAA2D,EACWpB,EAAKjB,MAAzBX,EADSgD,EACThD,MAAOiD,EADED,EACFC,SACPxE,EAAmBuB,EAAnBvB,KAAMC,EAAasB,EAAbtB,SAEd,OAAID,EASAC,OASJuE,EAAS,CAAC9F,KAAM,wBARZ+F,EAAA,EAAajB,MAAM,CACfkB,QAAS,2BACTC,YAAa,oCAGV,IAdPF,EAAA,EAAajB,MAAM,CACfkB,QAAS,2BACTC,YAAa,oCAGV,IAdGxB,4EA6BLyB,EAAG5E,GACZ,IAAMK,EAAQuE,EAAEC,OAASD,EAAEC,OAAOxE,MAAOuE,EACzC7F,KAAKmD,MAAMsC,SAAS,CAAC9F,KAAM,oBAAqB2B,QAAOL,0CAGlD,IAAA8E,EAAA/F,KAAAgG,EACqBhG,KAAKmD,MAAvBX,EADHwD,EACGxD,MACAvB,GAFH+E,EACUC,QACqBzD,EAA5BvB,MAAMC,EAAsBsB,EAAtBtB,SAAUC,EAAYqB,EAAZrB,QAExB,OACIqC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,mBACXF,EAAAzB,EAAA0B,cAAAyC,EAAA,gBAEA1C,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,cACXF,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,CAAWC,MAAO,IAAK1C,UAAU,gBAC7BF,EAAAzB,EAAA0B,cAAC2B,EAAD,CAAUP,IAAI,SACVrB,EAAAzB,EAAA0B,cAAA4C,EAAA,GACI/E,MAAOL,EACPqF,SAAU,SAACT,GAAD,OAAOE,EAAKQ,aAAaV,EAAG,SACtCW,OAAQhD,EAAAzB,EAAA0B,cAAAgD,EAAA,GAAM9G,KAAK,OAAO+G,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,cAEpBpD,EAAAzB,EAAA0B,cAAC2B,EAAD,CAAUP,IAAI,SACVrB,EAAAzB,EAAA0B,cAAA4C,EAAA,GACI/E,MAAOJ,EACPoF,SAAU,SAACT,GAAD,OAAOE,EAAKQ,aAAaV,EAAG,aACtCW,OAAQhD,EAAAzB,EAAA0B,cAAAgD,EAAA,GAAM9G,KAAK,OAAO+G,MAAO,CAAEC,MAAO,qBAC1ChH,KAAK,WACLiH,YAAY,cAEpBpD,EAAAzB,EAAA0B,cAAC2B,EAAD,CAAUP,IAAI,SACVrB,EAAAzB,EAAA0B,cAAAoD,EAAA,GAAUnD,UAAU,iBAAiBoD,SAAS,GAA9C,eACAtD,EAAAzB,EAAA0B,cAAA,KAAGC,UAAU,oBAAoBqD,KAAK,IACjC5F,EAAQ,qBAAM,mBAEnBqC,EAAAzB,EAAA0B,cAAAuD,EAAA,GACIrH,KAAK,UACLsH,SAAS,SACTvD,UAAU,oBACVwD,QAASlH,KAAK6B,cAJlB,UALJ,MAaO2B,EAAAzB,EAAA0B,cAACE,EAAA,EAAD,CAAMC,GAAG,kBAAT,4BAzEPG,iBAyFToD,oBAPS,SAACnG,GACrB,MAAO,CACHwB,MAAOxB,EAAMwB,MACbyD,QAASjF,EAAMiF,UAIRkB,CAAyB5B,GC5FlCH,UAAWC,EAAA,EAAKC,MAGhB8B,EADLpD,gBAEG,SAAAoD,EAAYjE,GAAM,IAAAiB,EAAA,OAAA7C,OAAA6B,EAAA,EAAA7B,CAAAvB,KAAAoH,IACdhD,EAAA7C,OAAA8B,EAAA,EAAA9B,CAAAvB,KAAAuB,OAAA+B,EAAA,EAAA/B,CAAA6F,GAAA7D,KAAAvD,KAAMmD,KAGVtB,aAAe,WAAM,IAAA2D,EACcpB,EAAKjB,MAA5BF,EADSuC,EACTvC,SAAUwC,EADDD,EACCC,SACVxE,EAAqCgC,EAArChC,KAAMC,EAA+B+B,EAA/B/B,SAAU4B,EAAqBG,EAArBH,iBAExB,OAAI7B,EASAC,EASDA,IAAa4B,GACZ4C,EAAA,EAAajB,MAAM,CACfkB,QAAS,2BACTC,YAAa,gDAGV,QAGXH,EAAS,CAAC9F,KAAK,2BAjBX+F,EAAA,EAAajB,MAAM,CACfkB,QAAS,2BACTC,YAAa,oCAGV,IAdPF,EAAA,EAAajB,MAAM,CACfkB,QAAS,2BACTC,YAAa,oCAGV,IAdGxB,4EAsCLyB,EAAG5E,GACZ,IAAMK,EAAQuE,EAAEC,OAASD,EAAEC,OAAOxE,MAAOuE,EACzC7F,KAAKmD,MAAMsC,SAAS,CAAC9F,KAAM,uBAAwB2B,QAAOL,0CAGrD,IAAA8E,EAAA/F,KAAAqH,EACwCrH,KAAKmD,MAAMF,SAAhDhC,EADHoG,EACGpG,KAAMC,EADTmG,EACSnG,SAAU4B,EADnBuE,EACmBvE,iBAExB,OAEIU,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,sBACXF,EAAAzB,EAAA0B,cAAAyC,EAAA,mBAEA1C,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,iBACXF,EAAAzB,EAAA0B,cAAC0C,EAAA,EAAD,CAAWC,MAAO,IAAK1C,UAAU,gBAC7BF,EAAAzB,EAAA0B,cAAC6D,EAAD,CAAUzC,IAAI,SACVrB,EAAAzB,EAAA0B,cAAA4C,EAAA,GACI/E,MAAOL,EACPqF,SAAU,SAACT,GAAD,OAAOE,EAAKQ,aAAaV,EAAG,SACtCW,OAAQhD,EAAAzB,EAAA0B,cAAAgD,EAAA,GAAM9G,KAAK,OAAO+G,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,cAEpBpD,EAAAzB,EAAA0B,cAAC6D,EAAD,CAAUzC,IAAI,SACVrB,EAAAzB,EAAA0B,cAAA4C,EAAA,GACIpF,KAAMC,EACNoF,SAAU,SAACT,GAAD,OAAOE,EAAKQ,aAAaV,EAAG,aACtCW,OAAQhD,EAAAzB,EAAA0B,cAAAgD,EAAA,GAAM9G,KAAK,OAAO+G,MAAO,CAAEC,MAAO,qBAC1ChH,KAAK,WACLiH,YAAY,cAEpBpD,EAAAzB,EAAA0B,cAAC6D,EAAD,CAAUzC,IAAI,SACVrB,EAAAzB,EAAA0B,cAAA4C,EAAA,GACIpF,KAAM6B,EACNwD,SAAU,SAACT,GAAD,OAAOE,EAAKQ,aAAaV,EAAG,qBACtCW,OAAQhD,EAAAzB,EAAA0B,cAAAgD,EAAA,GAAM9G,KAAK,OAAO+G,MAAO,CAAEC,MAAO,qBAC1ChH,KAAK,WACLiH,YAAY,sBAEpBpD,EAAAzB,EAAA0B,cAAC6D,EAAD,CAAUzC,IAAI,SACVrB,EAAAzB,EAAA0B,cAAAuD,EAAA,GACIrH,KAAK,UACLsH,SAAS,SACTvD,UAAU,oBACVwD,QAASlH,KAAK6B,cAJlB,YADJ,MASO2B,EAAAzB,EAAA0B,cAACE,EAAA,EAAD,CAAMC,GAAG,eAAT,yBAtFJG,iBAsGZoD,oBANS,SAACnG,GACrB,MAAO,CACHiC,SAAUjC,EAAMiC,WAITkE,CAAyBC,qBC9GnBG,cACjB,SAAAA,EAAYpE,GAAO,IAAAiB,EAAA,OAAA7C,OAAA6B,EAAA,EAAA7B,CAAAvB,KAAAuH,IACfnD,EAAA7C,OAAA8B,EAAA,EAAA9B,CAAAvB,KAAAuB,OAAA+B,EAAA,EAAA/B,CAAAgG,GAAAhE,KAAAvD,KAAMmD,KAGVqE,eAAiB,SAACC,GACXA,EAAUC,SAASC,WAAavD,EAAKjB,MAAMwE,WAC1CC,IAAUC,QACMJ,EAAUK,IAAIC,OAAOC,WAAW/B,QAEpCgC,QACRL,IAAUM,SAVH9D,yFAeOqD,GACtBzH,KAAKwH,eAAeC,oCAIpB,OACIjE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,SACV1D,KAAKmD,MAAMgF,iBAvBgBpE,aCoB7BqE,EAfM,SAAA1H,GAAW,IAAToH,EAASpH,EAAToH,IACnB,OACItE,EAAAzB,EAAA0B,cAAC4E,EAAA,cAAD,KACI7E,EAAAzB,EAAA0B,cAAC4E,EAAA,OAAD,KACI7E,EAAAzB,EAAA0B,cAAC6E,EAAD,CAAgBR,IAAKA,GACjBtE,EAAAzB,EAAA0B,cAAC4E,EAAA,MAAD,CAAOE,KAAK,QAAQC,OAAK,EAACC,UAAWvF,IACrCM,EAAAzB,EAAA0B,cAAC4E,EAAA,MAAD,CAAOE,KAAK,cAAcC,OAAK,EAACC,UAAWC,IAC3ClF,EAAAzB,EAAA0B,cAAC4E,EAAA,MAAD,CAAOE,KAAK,iBAAiBC,OAAK,EAACC,UAAWE,eCH9CC,QACa,cAA7BC,OAAOnB,SAASoB,UAEiB,UAA7BD,OAAOnB,SAASoB,UAEhBD,OAAOnB,SAASoB,SAASC,MACrB,2DCLZ,IAAMjB,EAAMkB,IAAI,CACZC,QAASC,gBAIbpB,EAAIqB,IAAIC,OAGRtB,EAAIuB,MAAM7G,GACVsF,EAAIuB,MAAMpG,GAGV6E,EAAIO,OAAOA,GAGXP,EAAID,MAAM,SDsGF,kBAAmByB,WACnBA,UAAUC,cAAcC,MAAMvJ,KAAK,SAAAwJ,GAC/BA,EAAaC","file":"static/js/main.bb999574.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.436caf36.jpg\";","import axios from 'axios';\n\nconst API = {\n    REQUEST: function(url, type, params={}){\n        // todo 可以在此处统一加loading，走参数配置，决定是否使用loading\n        return this[type](url, params).then((res) => {\n            return res.data;\n            // todo 统一容错\n        });\n    },\n    GET: function(url, params){\n        return axios.get(url, {params});\n    },\n    POST: function(url, params){\n        return axios.post(url, params);\n    },\n    DELETE: function(url, {params}){\n        return axios.delete(url, params);\n    },\n    PUT: function(url, params){\n        return axios.put(url, params);\n    }\n};\n\nexport default API;\n","import md5 from 'md5';\nimport API from '../api';\n\nexport default {\n    namespace: 'login',\n    state: {\n        name: '',\n        password: '',\n        isLogin: false\n    },\n    reducers: {\n        handleInput(state, {value, name}) {\n            state[name] = value;\n\n            return {\n                ...state\n            };\n        },\n        refresh(state, {payload}) {\n            return {\n                ...state,\n                ...payload\n            };\n        },\n    },\n    effects: {\n        *handleSubmit(action, { put, select }) {\n            const state = yield select(state => state.login);\n            const {name, password} = state;\n            const data = {\n                name,\n                password: md5(password)\n            };\n            const res = yield API.REQUEST('/api/user', 'PUT', data);\n            const isLogin = res.ret === 0;\n            yield put({ type: 'refresh', payload:{isLogin} });\n        },\n    },\n};\n","import md5 from 'md5';\nimport API from '../api';\n\nexport default {\n    namespace: 'register',\n    state: {\n        name: '',\n        password: '',\n        confirm_password: '',\n        isRegister: false\n    },\n\n    subscriptions: {},\n\n    effects: {\n        *handleSubmit(action, { put, select }) {\n            const state = yield select(state => state.register);\n            const {name, password, confirm_password} = state;\n            const data = {\n                name,\n                password: md5(password),\n                confirm_password: md5(confirm_password)\n            };\n            const res = yield API.REQUEST('/api/user', 'POST', data);\n            const isRegister = res.ret === 0;\n            yield put({ type: 'refresh', payload:{isRegister} });\n        },\n    },\n\n    reducers: {\n        handleInput(state, {value, name}) {\n            state[name] = value;\n\n            return {\n                ...state\n            };\n        },\n        refresh(state, {payload}) {\n            return {\n                ...state,\n                ...payload\n            };\n        },\n    },\n\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.scss';\nimport pic1 from '../../images/1.jpg';\n\nexport default class Main extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className='container'>\n                <header>\n                    <Link to='/blog/login'>登录</Link>\n                    <Link to='/blog/register'>注册</Link>\n                </header>\n\n                <div className=\"section\">\n                    <img src={pic1}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import ErrorBoundary from './ErrorBoundary';\n\nexport default function Page(_Component) {\n    const Component = ErrorBoundary(_Component);\n\n    return Component;\n}\n\n","import React from 'react';\n\n// 捕获错误高阶组件，客户端可以正常捕获，\n// node渲染时的错误需要在node解析的时候去捕获\nexport default function ErrorBoundary(Component) {\n    class ErrorBoundaryHoc extends React.Component {\n        constructor(props) {\n            super(props);\n            this.componentName = Component.name;\n            this.componentKind = Component._component_kind_;\n            this.state = {hasError: false, error: null, info: null};\n        }\n\n        handleError(error, info) {\n            const {componentName, componentKind} = this;\n            this.setState({hasError: true, error, info});\n            console.log('----------------------------');\n            console.log('[error componentKind]', componentKind);\n            console.log('[error componentName]', componentName);\n            console.log('[error message]', error);\n            console.log('[error info]', info);\n            console.log('----------------------------');\n            // todo 错误上传\n        }\n\n        componentDidCatch(error, info) {\n            this.handleError(error, info);\n        }\n\n        render() {\n            const {hasError} = this.state;\n            if (hasError) {\n                return null;\n            }\n\n            return <Component {...this.props} />;\n        }\n    }\n\n    return ErrorBoundaryHoc;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'dva';\nimport QueueAnim from 'rc-queue-anim';\nimport Page from '../../components/Page';\nimport { Form, Icon, Input, Button, Checkbox, Divider, notification } from 'antd';\nimport './style.scss';\n\nconst FormItem = Form.Item;\n\n@Page\nclass LoginForm extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    handleSubmit = () => {\n        const { login, dispatch } = this.props;\n        const { name, password } = login;\n\n        if(!name){\n            notification.error({\n                message: '错误信息',\n                description: '请输入姓名'\n            });\n\n            return false;\n        }\n\n        if(!password){\n            notification.error({\n                message: '错误信息',\n                description: '请输入密码'\n            });\n\n            return false;\n        }\n\n        dispatch({type: 'login/handleSubmit'});\n    }\n\n    handleChange(e, name){\n        const value = e.target ? e.target.value: e;\n        this.props.dispatch({type: 'login/handleInput', value, name});\n    }\n\n    render() {\n        const { login, loading} = this.props;\n        const { name, password, isLogin } = login;\n\n        return (\n            <div className='login_container'>\n                <Divider>LOGIN</Divider>\n\n                <div className='login-form'>\n                    <QueueAnim delay={300} className='queue-simple'>\n                        <FormItem key='form1'>\n                            <Input\n                                value={name}\n                                onChange={(e) => this.handleChange(e, 'name')}\n                                prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                                placeholder='Username'/>\n                        </FormItem>\n                        <FormItem key='form2'>\n                            <Input\n                                value={password}\n                                onChange={(e) => this.handleChange(e, 'password')}\n                                prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                                type='password'\n                                placeholder='Password'/>\n                        </FormItem>\n                        <FormItem key='form3'>\n                            <Checkbox className='logon-remember' checked={true}>Remember me</Checkbox>\n                            <a className='login-form-forgot' href=''>\n                                {isLogin?'已登陆':'Forgot password'}\n                            </a>\n                            <Button\n                                type='primary'\n                                htmlType='submit'\n                                className='login-form-button'\n                                onClick={this.handleSubmit}\n                            >\n                                Log in\n                            </Button>\n                            Or <Link to='/blog/register'>register now!</Link>\n                        </FormItem>\n                    </QueueAnim>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        loading: state.loading\n    };\n};\n\nexport default connect(mapStateToProps)(LoginForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'dva';\nimport QueueAnim from 'rc-queue-anim';\nimport Page from '../../components/Page';\nimport { Form, Icon, Input, Button, Divider, notification } from 'antd';\nimport './style.scss';\n\nconst FormItem = Form.Item;\n\n@Page\nclass RegisterForm extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    handleSubmit = () => {\n        const { register, dispatch } = this.props;\n        const { name, password, confirm_password } = register;\n\n        if(!name){\n            notification.error({\n                message: '错误信息',\n                description: '请输入姓名'\n            });\n\n            return false;\n        }\n\n        if(!password){\n            notification.error({\n                message: '错误信息',\n                description: '请输入密码'\n            });\n\n            return false;\n        }\n\n        if(password !== confirm_password){\n            notification.error({\n                message: '错误信息',\n                description: '两次密码不一致'\n            });\n\n            return false;\n        }\n\n        dispatch({type:'register/handleSubmit'});\n    }\n\n    handleChange(e, name){\n        const value = e.target ? e.target.value: e;\n        this.props.dispatch({type: 'register/handleInput', value, name});\n    }\n\n    render() {\n        const { name, password, confirm_password } = this.props.register;\n\n        return (\n\n            <div className='register_container'>\n                <Divider>Register</Divider>\n\n                <div className='register-form'>\n                    <QueueAnim delay={300} className='queue-simple'>\n                        <FormItem key='form1'>\n                            <Input\n                                value={name}\n                                onChange={(e) => this.handleChange(e, 'name')}\n                                prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                                placeholder='Username'/>\n                        </FormItem>\n                        <FormItem key='form2'>\n                            <Input\n                                name={password}\n                                onChange={(e) => this.handleChange(e, 'password')}\n                                prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                                type='password'\n                                placeholder='Password'/>\n                        </FormItem>\n                        <FormItem key='form3'>\n                            <Input\n                                name={confirm_password}\n                                onChange={(e) => this.handleChange(e, 'confirm_password')}\n                                prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                                type='password'\n                                placeholder='Confirm Password'/>\n                        </FormItem>\n                        <FormItem key='form4'>\n                            <Button\n                                type='primary'\n                                htmlType='submit'\n                                className='login-form-button'\n                                onClick={this.handleSubmit}\n                            >\n                                register\n                            </Button>\n                            Or <Link to='/blog/login'>login now!</Link>\n                        </FormItem>\n                    </QueueAnim>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        register: state.register\n    };\n};\n\nexport default connect(mapStateToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport nprogress from 'nprogress';\n\nexport default class FrameContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleProgress = (nextProps) => {\n        if(nextProps.location.pathname !== this.props.pathname){\n            nprogress.start();\n            const loading = nextProps.app._store.getState().loading;\n\n            if(!loading.global){\n                nprogress.done();\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.handleProgress(nextProps);\n    }\n\n    render(){\n        return (\n            <div className='Frame'>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","\nimport React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'dva/router';\nimport Main from './pages/main';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport FrameContainer from './components/Frame';\n\nconst RouterConfig = ({app}) => {\n    return (\n        <Router>\n            <Switch>\n                <FrameContainer app={app}>\n                    <Route path=\"/blog\" exact component={Main} />\n                    <Route path=\"/blog/login\" exact component={Login} />\n                    <Route path=\"/blog/register\" exact component={Register} />\n                </FrameContainer>\n            </Switch>\n\n        </Router>\n    );\n};\n\nexport default RouterConfig;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.ßßßß\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import dva from 'dva';\nimport createLoading from 'dva-loading';\nimport {createBrowserHistory as createHistory} from 'history';\n\nimport login from './models/login';\nimport register from './models/register';\nimport router from './router';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\n// 1. Initialize\n// 初始化dva对象的时候,要是传空的话，即使用了BrowserRouter URL后面还是会加上#/ 很丑\nconst app = dva({\n    history: createHistory()\n});\n\n// 2. Plugins\napp.use(createLoading());\n\n// 3. Model\napp.model(login);\napp.model(register);\n\n// 4. Router\napp.router(router);\n\n// 5. Start\napp.start('#root');\n\nserviceWorker.unregister();\n"],"sourceRoot":""}