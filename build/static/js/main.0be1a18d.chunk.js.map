{"version":3,"sources":["images/1.jpg","components/Page/index.js","pages/main/index.js","api/index.js","pages/login/index.js","pages/register/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Page","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","children","Component","Main","Page_Page","Link","to","src","pic1","API","REQUEST","url","type","params","arguments","length","undefined","then","res","data","GET","axios","get","POST","post","DELETE","_ref","delete","PUT","put","FormItem","es_form","Item","LoginForm","_this","state","name","password","handleSubmit","bind","assertThisInitialized","_this$state","md5","ret","notification","error","message","description","success","e","value","target","setState","defineProperty","_this2","_this$state2","divider","input","onChange","handleChange","prefix","icon","style","color","placeholder","es_checkbox","checked","href","es_button","htmlType","onClick","RegisterForm","confirm_password","register_FormItem","App","BrowserRouter","Switch","Route","path","exact","component","Login","Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4UCGnBC,sBACjB,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACTH,0EAIN,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVP,KAAKH,MAAMW,iBARMC,yCCGbC,cACjB,SAAAA,EAAYb,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,GAAAZ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,KACTH,0EAIN,OACIO,EAAAC,EAAAC,cAACK,EAAD,KACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAT,gBACAT,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,kBAAT,iBAGJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKQ,IAAKC,gBAfAN,6LCiBnBO,EArBH,CACRC,QAAS,SAASC,EAAKC,GAAgB,IAAVC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,GAChC,OAAOrB,KAAKmB,GAAMD,EAAKE,GAAQI,KAAK,SAACC,GACjC,OAAOA,EAAIC,QAInBC,IAAK,SAAST,EAAKE,GACf,OAAOQ,IAAMC,IAAIX,EAAK,CAACE,YAE3BU,KAAM,SAASZ,EAAKE,GAChB,OAAOQ,IAAMG,KAAKb,EAAKE,IAE3BY,OAAQ,SAASd,EAATe,GAAuB,IAARb,EAAQa,EAARb,OACnB,OAAOQ,IAAMM,OAAOhB,EAAKE,IAE7Be,IAAK,SAASjB,EAAKE,GACf,OAAOQ,IAAMQ,IAAIlB,EAAKE,KCZxBiB,EAAWC,EAAA,EAAKC,KAsGPC,cApGX,SAAAA,EAAY3C,GAAM,IAAA4C,EAAA,OAAA3C,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACdC,EAAA3C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMH,KACD6C,MAAQ,CACTC,KAAM,GACNC,SAAU,IAEdH,EAAKI,aAAeJ,EAAKI,aAAaC,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAA2C,KANNA,8EASH,IAAAO,EACgBhD,KAAK0C,MAAxBC,EADGK,EACHL,KAAMC,EADHI,EACGJ,SACRlB,EAAO,CACTiB,OACAC,SAAUK,IAAIL,IAGlB,OAAID,EASAC,OASJ5B,EAAIC,QAAQ,YAAa,MAAOS,GAAMF,KAAK,SAACC,GACzB,IAAZA,EAAIyB,IACHC,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,iEAGjBH,EAAA,EAAaI,QAAQ,CACjBF,QAAS,2BACTC,YAAa,+GAjBrBH,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,oCAGV,IAdPH,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,oCAGV,wCA2BFE,EAAGb,GACZ,IAAMc,EAAQD,EAAEE,OAASF,EAAEE,OAAOD,MAAOD,EACzCxD,KAAK2D,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GACK6C,EAAMc,qCAIN,IAAAI,EAAA7D,KAAA8D,EACsB9D,KAAK0C,MAAxBC,EADHmB,EACGnB,KAAMC,EADTkB,EACSlB,SAEd,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAAyD,EAAA,gBAEA3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAAA0D,EAAA,GACIP,MAAOd,EACPsB,SAAU,SAACT,GAAD,OAAOK,EAAKK,aAAaV,EAAG,SACtCW,OAAQ/D,EAAAC,EAAAC,cAAA8D,EAAA,GAAMjD,KAAK,OAAOkD,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,cAEpBnE,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAAA0D,EAAA,GACIP,MAAOb,EACPqB,SAAU,SAACT,GAAD,OAAOK,EAAKK,aAAaV,EAAG,aACtCW,OAAQ/D,EAAAC,EAAAC,cAAA8D,EAAA,GAAMjD,KAAK,OAAOkD,MAAO,CAAEC,MAAO,qBAC1CnD,KAAK,WACLoD,YAAY,cAEpBnE,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAAAkE,EAAA,GAAUjE,UAAU,iBAAiBkE,SAAS,GAA9C,eACArE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBmE,KAAK,IAAtC,mBAGAtE,EAAAC,EAAAC,cAAAqE,EAAA,GACIxD,KAAK,UACLyD,SAAS,SACTrE,UAAU,oBACVsE,QAAS7E,KAAK6C,cAJlB,UALJ,MAaOzC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,kBAAT,2BA7FHJ,aCDlB4B,UAAWC,EAAA,EAAKC,MAsHPuC,cAnHX,SAAAA,EAAYjF,GAAM,IAAA4C,EAAA,OAAA3C,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,IACdrC,EAAA3C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgF,GAAA3E,KAAAH,KAAMH,KACD6C,MAAQ,CACTC,KAAM,GACNC,SAAU,GACVmC,iBAAkB,IAEtBtC,EAAKI,aAAeJ,EAAKI,aAAaC,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAA2C,KAPNA,8EAUJ,IAAAO,EACmChD,KAAK0C,MAA1CC,EADEK,EACFL,KAAMC,EADJI,EACIJ,SAAUmC,EADd/B,EACc+B,iBAClBrD,EAAO,CACTiB,OACAC,SAAUK,IAAIL,GACdmC,iBAAkB9B,IAAI8B,IAG1B,OAAIpC,EASAC,EASDA,IAAamC,GACZ5B,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,gDAGV,QAGXtC,EAAIC,QAAQ,YAAa,OAAQS,GAAMF,KAAK,SAACC,GAC1B,IAAZA,EAAIyB,IACHC,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,6BAGjBH,EAAA,EAAaI,QAAQ,CACjBF,QAAS,2BACTC,YAAa,6FA1BrBH,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,oCAGV,IAdPH,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAa,oCAGV,wCAoCFE,EAAGb,GACZ,IAAMc,EAAQD,EAAEE,OAASF,EAAEE,OAAOD,MAAOD,EACzCxD,KAAK2D,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GACK6C,EAAMc,qCAIN,IAAAI,EAAA7D,KAAA8D,EACwC9D,KAAK0C,MAA1CC,EADHmB,EACGnB,KAAMC,EADTkB,EACSlB,SAAUmC,EADnBjB,EACmBiB,iBAExB,OACI3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAAyD,EAAA,mBAEA3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAA0D,EAAA,GACIP,MAAOd,EACPsB,SAAU,SAACT,GAAD,OAAOK,EAAKK,aAAaV,EAAG,SACtCW,OAAQ/D,EAAAC,EAAAC,cAAA8D,EAAA,GAAMjD,KAAK,OAAOkD,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,cAEpBnE,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAA0D,EAAA,GACIrB,KAAMC,EACNqB,SAAU,SAACT,GAAD,OAAOK,EAAKK,aAAaV,EAAG,aACtCW,OAAQ/D,EAAAC,EAAAC,cAAA8D,EAAA,GAAMjD,KAAK,OAAOkD,MAAO,CAAEC,MAAO,qBAC1CnD,KAAK,WACLoD,YAAY,cAEpBnE,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAA0D,EAAA,GACIrB,KAAMoC,EACNd,SAAU,SAACT,GAAD,OAAOK,EAAKK,aAAaV,EAAG,qBACtCW,OAAQ/D,EAAAC,EAAAC,cAAA8D,EAAA,GAAMjD,KAAK,OAAOkD,MAAO,CAAEC,MAAO,qBAC1CnD,KAAK,WACLoD,YAAY,sBAEpBnE,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAAqE,EAAA,GACIxD,KAAK,UACLyD,SAAS,SACTrE,UAAU,oBACVsE,QAAS7E,KAAK6C,cAJlB,YADJ,MASOzC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAT,wBA5GAJ,aCeZwE,2LAdP,OACI7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACI9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACI/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAW7E,IACrCN,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,UAAWC,IAC3CpF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,OAAK,EAACC,UAAWE,cARpDhF,cCIEiF,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCbZC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe,SD6HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GAC/BA,EAAaC","file":"static/js/main.0be1a18d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.436caf36.jpg\";","import React, { Component } from 'react';\nimport './style.scss';\n\nexport default class Page extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className='Page_container'>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport './style.scss';\nimport pic1 from '../../images/1.jpg';\n\nexport default class Main extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <Page>\n                <div className='container'>\n                    <header>\n                        <Link to='/blog/login'>登录</Link>\n                        <Link to='/blog/register'>注册</Link>\n                    </header>\n\n                    <div className=\"section\">\n                        <img src={pic1}/>\n                    </div>\n                </div>\n            </Page>\n        );\n    }\n}\n","import axios from 'axios';\n\nconst API = {\n    REQUEST: function(url, type, params={}){\n        return this[type](url, params).then((res) => {\n            return res.data;\n            // todo 统一容错\n        });\n    },\n    GET: function(url, params){\n        return axios.get(url, {params});\n    },\n    POST: function(url, params){\n        return axios.post(url, params);\n    },\n    DELETE: function(url, {params}){\n        return axios.delete(url, params);\n    },\n    PUT: function(url, params){\n        return axios.put(url, params);\n    }\n};\n\nexport default API;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport md5 from 'md5';\nimport { Form, Icon, Input, Button, Checkbox, Divider, notification } from 'antd';\nimport './style.scss';\nimport API from '../../api';\n\nconst FormItem = Form.Item;\nclass LoginForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            password: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit (){\n        const { name, password } = this.state;\n        const data = {\n            name,\n            password: md5(password)\n        };\n\n        if(!name){\n            notification.error({\n                message: '错误信息',\n                description: '请输入姓名'\n            });\n\n            return false;\n        }\n\n        if(!password){\n            notification.error({\n                message: '错误信息',\n                description: '请输入密码'\n            });\n\n            return false;\n        }\n\n        API.REQUEST('/api/user', 'PUT', data).then((res) => {\n            if(res.ret !== 0){\n                notification.error({\n                    message: '错误信息',\n                    description: '输入的账号或密码错误'\n                });\n            }else{\n                notification.success({\n                    message: '成功信息',\n                    description: '登陆成功,以后会跳到首页去，敬请谅解'\n                });\n            }\n        });\n    }\n\n    handleChange(e, name){\n        const value = e.target ? e.target.value: e;\n        this.setState({\n            [name]:value\n        });\n    }\n\n    render() {\n        const { name, password } = this.state;\n\n        return (\n            <div className='login_container'>\n                <Divider>LOGIN</Divider>\n\n                <div className='login-form'>\n                    <FormItem>\n                        <Input\n                            value={name}\n                            onChange={(e) => this.handleChange(e, 'name')}\n                            prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                            placeholder='Username'/>\n                    </FormItem>\n                    <FormItem>\n                        <Input\n                            value={password}\n                            onChange={(e) => this.handleChange(e, 'password')}\n                            prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                            type='password'\n                            placeholder='Password'/>\n                    </FormItem>\n                    <FormItem>\n                        <Checkbox className='logon-remember' checked={true}>Remember me</Checkbox>\n                        <a className='login-form-forgot' href=''>\n                            Forgot password\n                        </a>\n                        <Button\n                            type='primary'\n                            htmlType='submit'\n                            className='login-form-button'\n                            onClick={this.handleSubmit}\n                        >\n                            Log in\n                        </Button>\n                        Or <Link to='/blog/register'>register now!</Link>\n                    </FormItem>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport md5 from 'md5';\nimport API from '../../api';\nimport { Form, Icon, Input, Button, Divider, notification } from 'antd';\nimport './style.scss';\n\nconst FormItem = Form.Item;\n\nclass RegisterForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            password: '',\n            confirm_password: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(){\n        const { name, password, confirm_password } = this.state;\n        const data = {\n            name,\n            password: md5(password),\n            confirm_password: md5(confirm_password)\n        };\n\n        if(!name){\n            notification.error({\n                message: '错误信息',\n                description: '请输入姓名'\n            });\n\n            return false;\n        }\n\n        if(!password){\n            notification.error({\n                message: '错误信息',\n                description: '请输入密码'\n            });\n\n            return false;\n        }\n\n        if(password !== confirm_password){\n            notification.error({\n                message: '错误信息',\n                description: '两次密码不一致'\n            });\n\n            return false;\n        }\n\n        API.REQUEST('/api/user', 'POST', data).then((res) => {\n            if(res.ret !== 0){\n                notification.error({\n                    message: '错误信息',\n                    description: '注册失败'\n                });\n            }else{\n                notification.success({\n                    message: '成功信息',\n                    description: '注册成功,请登陆，会跳到登陆页'\n                });\n            }\n        });\n    }\n\n    handleChange(e, name){\n        const value = e.target ? e.target.value: e;\n        this.setState({\n            [name]:value\n        });\n    }\n\n    render() {\n        const { name, password, confirm_password } = this.state;\n\n        return (\n            <div className='register_container'>\n                <Divider>Register</Divider>\n\n                <div className='register-form'>\n                    <FormItem>\n                        <Input\n                            value={name}\n                            onChange={(e) => this.handleChange(e, 'name')}\n                            prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                            placeholder='Username'/>\n                    </FormItem>\n                    <FormItem>\n                        <Input\n                            name={password}\n                            onChange={(e) => this.handleChange(e, 'password')}\n                            prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                            type='password'\n                            placeholder='Password'/>\n                    </FormItem>\n                    <FormItem>\n                        <Input\n                            name={confirm_password}\n                            onChange={(e) => this.handleChange(e, 'confirm_password')}\n                            prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                            type='password'\n                            placeholder='Confirm Password'/>\n                    </FormItem>\n                    <FormItem>\n                        <Button\n                            type='primary'\n                            htmlType='submit'\n                            className='login-form-button'\n                            onClick={this.handleSubmit}\n                        >\n                            register\n                        </Button>\n                        Or <Link to='/blog/login'>login now!</Link>\n                    </FormItem>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport Main from './pages/main';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport './App.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/blog\" exact component={Main} />\n                        <Route path=\"/blog/login\" exact component={Login} />\n                        <Route path=\"/blog/register\" exact component={Register} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.ßßßß\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}