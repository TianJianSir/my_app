{"version":3,"sources":["images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/prize01.png","components/Page/index.js","utils/commonStore.js","utils/index.js","pages/main/index.js","pages/detail/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Page","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","children","Component","COMMONSTORE","namespace","setData","name","data","utils","init","Obj","commonStore","setCommonStore","Main","fullpage","navigation","scrollHorizontally","css3","scrollingSpeed","scrollBar","easing","slidesNavigation","easingcss3","address","bus","console","log","Page_Page","onClick","saveData","showData","Link","to","id","src","pic1","pic2","pic3","pic4","FormItem","es_form","Item","NormalLoginForm","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","getFieldDecorator","onSubmit","rules","required","message","input","prefix","icon","type","style","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","React","WrappedNormalLoginForm","create","App","BrowserRouter","Switch","Route","path","exact","component","Detail","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.092ddc0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.436caf36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.bb414b20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.1042f738.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.787c5b2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prize01.88ab8df7.png\";","import React, { Component } from 'react';\nimport './style.scss';\n\nexport default class Page extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className='Page_container'>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","// 存储全局公共变量\nconst COMMONSTORE = {\n    namespace: 'commonStore',\n    setData: function(name, data){\n        this[name] = data;\n    }\n};\n\nexport default COMMONSTORE;\n","import commonStore from './commonStore';\n\nfunction init(Obj){\n    setCommonStore(Obj);\n}\n\nfunction setCommonStore(Obj){\n    commonStore.setData('initData', Obj);\n}\n\nexport default {\n    init\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport fullpage from 'fullpage.js';\nimport './style.scss';\nimport pic1 from '../../images/1.jpg';\nimport pic2 from '../../images/2.jpg';\nimport pic3 from '../../images/3.jpg';\nimport pic4 from '../../images/4.jpg';\nimport utils from '../../utils';\nimport COMMONSTORE from '../../utils/commonStore';\n\nexport default class Main extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount(){\n        const fullPageInstance = new fullpage('#fullpage', {\n            navigation: true,\n            scrollHorizontally: true,\n            css3: true,\n            scrollingSpeed: 700,\n            scrollBar: false,\n            easing: 'easeInOutCubic',\n            slidesNavigation: true,\n            easingcss3: 'ease',\n        });\n    }\n\n    saveData(){\n        const data = {\n            name: 'xima',\n            address: 'zhangjiang',\n            bus: 12\n        };\n        utils.init(data);\n    }\n\n    showData(){\n        console.log(COMMONSTORE);\n    }\n\n    render(){\n        return (\n            <Page>\n                <div className='container'>\n                    <header>\n                        <button onClick={this.saveData}>save data</button>\n                        <button onClick={this.showData}>show data</button>\n                        <Link to='/blog/login'>登录</Link>\n                        <Link to='/blog/login'>注册</Link>\n                    </header>\n                    <div id=\"fullpage\">\n                        <div className=\"section\">\n                            <img src={pic1}/>\n                        </div>\n                        <div className=\"section\">\n                            <img src={pic2}/>\n                        </div>\n                        <div className=\"section\">\n                            <img src={pic3}/>\n                        </div>\n                        <div className=\"section\">\n                            <img src={pic4}/>\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </Page>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport Page from '../../components/Page';\nimport prize01 from '../../images/prize01.png';\nimport './style.scss';\nimport commonStore from '../../utils/commonStore';\n\nconst FormItem = Form.Item;\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <div className='login_container'>\n                <Form onSubmit={this.handleSubmit} className='login-form'>\n                    <FormItem>\n                        {getFieldDecorator('userName', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Please input your username!'\n                                }\n                            ]\n                        })(\n                            <Input\n                                prefix={\n                                    <Icon\n                                        type='user'\n                                        style={{ color: 'rgba(0,0,0,.25)' }}\n                                    />\n                                }\n                                placeholder='Username'\n                            />\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Please input your Password!'\n                                }\n                            ]\n                        })(\n                            <Input\n                                prefix={\n                                    <Icon\n                                        type='lock'\n                                        style={{ color: 'rgba(0,0,0,.25)' }}\n                                    />\n                                }\n                                type='password'\n                                placeholder='Password'\n                            />\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        {getFieldDecorator('remember', {\n                            valuePropName: 'checked',\n                            initialValue: true\n                        })(<Checkbox>Remember me</Checkbox>)}\n                        <a className='login-form-forgot' href=''>\n                            Forgot password\n                        </a>\n                        <Button\n                            type='primary'\n                            htmlType='submit'\n                            className='login-form-button'\n                        >\n                            Log in\n                        </Button>\n                        Or <a href=''>register now!</a>\n                    </FormItem>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport Main from './pages/main';\nimport Detail from './pages/detail';\nimport './App.scss';\n\nclass App extends Component {\n    componentDidMount() {\n        console.log('app didmount');\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/blog\" exact component={Main} />\n                        <Route path=\"/blog/login\" exact component={Detail} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.ßßßß\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}